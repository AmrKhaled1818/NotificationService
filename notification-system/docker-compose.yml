version: '3.9'

services:
  api-service:
    build:
      context: .
      dockerfile: api-service/Dockerfile
    working_dir: /app
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=pass
      - DB_NAME=testdb
    restart: unless-stopped

  outbox-worker:
    build:
      context: .
      dockerfile: outbox-worker/Dockerfile
    working_dir: /app
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=pass
      - DB_NAME=testdb
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - api-service
      - outbox-worker
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  dead-letter-consumer:
    build:
      context: .
      dockerfile: ./outbox-worker/Dockerfile
    container_name: notification-system-dlq-consumer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    command: node deadLetterConsumer.js


volumes:
  postgres_data:
